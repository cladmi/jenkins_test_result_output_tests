<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="iotlab-m3" skips="0" tests="1" time="15.278"><properties><property name="RIOT_VERSION" value="2019.07-devel-249-g5bb49-HEAD"/></properties><testcase classname="iotlab-m3.tests_pthread_condition_variable" file="tests/01-run.py" line="12" name="test.tests.01-run.testfunc" time="15.214754581451416"><failure message="pexpect.exceptions.TIMEOUT: condition fulfilled.">child = &lt;pytest_child.CustomSpawn object at 0x7f1944b95048&gt;

    def testfunc(child):
        child.expect(&apos;START&apos;)
&gt;       child.expect(&apos;condition fulfilled.&apos;)

tests/01-run.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;pytest_child.CustomSpawn object at 0x7f1944b95048&gt;
pattern = &apos;condition fulfilled.&apos;, args = (), kwargs = {}

    def expect(self, pattern, *args, **kwargs):
        # pylint:disable=arguments-differ
        try:
            return super().expect(pattern, *args, **kwargs)
        except (pexpect.TIMEOUT, pexpect.EOF) as exc:
            exc.orig_value = exc.value
            exc.value = pattern
&gt;           raise exc.with_traceback(None) from None
E           pexpect.exceptions.TIMEOUT: condition fulfilled.

../../../iotlab-os-ci/tools/pytest/pytest_child.py:113: TIMEOUT</failure><system-out>ssh -t iotlab@saclay.iot-lab.info &apos;socat - tcp:m3-1.saclay.iot-lab.info:20000&apos;
Still alive alternated [count: 100k] times.
Still alive alternated [count: 200k] times.
�main(): This is RIOT! (Version: buildtest)
START
�main(): This is RIOT! (Version: buildtest)
START
Still alive alternated [count: 100k] times.
Still alive alternated [count: 200k] times.
Still alive alternated [count: 300k] times.

</system-out></testcase></testsuite>