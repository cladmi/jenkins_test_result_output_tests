<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="native.gnu" skips="0" tests="1" time="13.457"><testcase classname="native.gnu.native.gnu.tests.01-run" file="tests/01-run.py" line="8" name="testfunc" time="13.39646577835083"><failure message="pexpect.exceptions.TIMEOUT: Result: [0-9A-Z]+ SUCCESS">child = &lt;pytest_child.CustomSpawn object at 0x7f7c52aaa358&gt;

    def testfunc(child):
        for test in range(NB_TESTS):
            child.expect_exact(&apos;Test {}:&apos;.format(test + 1))
&gt;           child.expect(&apos;Result: [0-9A-Z]+ SUCCESS&apos;)

tests/01-run.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;pytest_child.CustomSpawn object at 0x7f7c52aaa358&gt;
pattern = &apos;Result: [0-9A-Z]+ SUCCESS&apos;, args = (), kwargs = {}

    def expect(self, pattern, *args, **kwargs):
        # pylint:disable=arguments-differ
        try:
            return super().expect(pattern, *args, **kwargs)
        except (pexpect.TIMEOUT, pexpect.EOF) as exc:
            exc.orig_value = exc.value
            exc.value = pattern
&gt;           raise exc.with_traceback(None) from None
E           pexpect.exceptions.TIMEOUT: Result: [0-9A-Z]+ SUCCESS

../../dist/tools/pytest_wrappers/test/pytest_child.py:90: TIMEOUT</failure><system-out>/home/cladmi/git/work/RIOT/tests/pkg_cayenne-lpp/bin/native/tests_pkg_cayenne-lpp.elf  
RIOT native interrupts/signals initialized.
LED_RED_OFF
LED_GREEN_ON
RIOT native board initialized.
RIOT native hardware initialization complete.

main(): This is RIOT! (Version: buildtest)
Cayenne LPP test application

Test 1:
-------
Result: 03670110056700FF SUCCESS

Test 2:
-------
Result: 0167FFD7067104D2FB2E0000
Expected: 0167FFD8067104D1FB2F0000 FAILED

</system-out></testcase></testsuite>